#BlueJ class context
comment0.params=p\ n\ c
comment0.target=Parking(int,\ int,\ double)
comment0.text=\ Constructor\ que\ crea\ un\ parking\ a\ partir\ del\ numero\ de\ plantas,\ \n\ numero\ de\ plazas\ por\ planta,\ y\ coste\ en\ euros\ por\ minuto.\n\ El\ parking,\ al\ comienzo,\ esta\ vacio.\n\ @param\ p\ int\ numero\ de\ plantas,\ p\ >\ 0.\n\ @param\ n\ int\ numero\ de\ plazas\ por\ planta,\ n\ >\ 0.\n\ @param\ c\ double\ coste\ en\ euros\ por\ minuto,\ c\ >\ 0.\n
comment1.params=nomFich
comment1.target=Parking(java.lang.String)
comment1.text=\ Constructor\ que\ crea\ un\ parking\ a\ partir\ de\ los\ datos\ de\ un\ fichero\ \n\ cuyo\ nombre\ se\ pasa\ como\ parametro.<br>\n\ Formato\ del\ fichero\:\n\ <pre>\n\ plantas\ plazas\n\ coste\n\ planta\ matricula\ horas\ minutos\n\ ...\n\ planta\ matricula\ horas\ minutos\n\ </pre>\n\ Los\ datos\ son\ correctos\ (no\ hay\ coches\ ni\ plazas\ repetidos,\ \n\ plantas\ no\ completas\ y\ correctas,\ \n\ y\ horas\ correctas).\ \n\ @param\ nomFich\ String\ nombre\ del\ fichero\ con\ los\ datos.\n\ @throws\ Exception\ si\ ocurre\ algun\ error\ de\ entrada/salida.\n
comment10.params=
comment10.target=double\ vaciarParking()
comment10.text=\ Vacia\ todo\ el\ parking,\ suponiendo\ que\ son\ las\ 23\:59,\ \n\ y\ calcula\ y\ devuelve\ el\ coste\ total.\n\ @return\ double,\ coste\ total\ en\ euros\ a\ pagar\ por\ todos\ los\ coches\ \n\ \ \ que\ salen\ del\ parking.\n
comment11.params=
comment11.target=java.lang.String\ toString()
comment11.text=\ Devuelve\ un\ String\ que\ representa\ la\ ocupacion\ del\ parking,\ \n\ con\ 'X'\ ocupada,\ '\ '\ libre.\n\ Debe\ colocar\ un\ encabezamiento\ con\ los\ numeros\ de\ \n\ plaza\ correspondientes.<br>\n\ Ejemplo\:\ <pre>\n\ \ \ \ \ \ \ \ \ \ "\ \ \ \ \ \ 0\ \ \ 1\ \ \ 2\ \ \ 3\ \ \ 4\ \n\ \ \ \ \ \ \ \ \ \ \ \ \ 0\ \ \ X\ \ \ X\ \ \ \ \ \ \ X\ \ \ \ \n\ \ \ \ \ \ \ \ \ \ \ \ \ 1\ \ \ \ \ \ \ X\ \ \ X\ \ \ \ \ \ \ X\n\ \ \ \ \ \ \ \ \ \ \ \ \ 2\ \ \ X\ \ \ X\ \ \ \ \ \ \ \ \ \ \ \ \ "\ </pre>\n\ @return\ String,\ representacion\ del\ parking.\n
comment2.params=
comment2.target=int\ getNumPlantas()
comment2.text=\ Devuelve\ el\ numero\ de\ plantas.\n\ @return\ int,\ numero\ de\ plantas\ del\ parking.\n
comment3.params=
comment3.target=int\ getNumPlazas()
comment3.text=\ Devuelve\ el\ numero\ de\ plazas\ por\ planta.\n\ @return\ int,\ numero\ de\ plazas\ por\ planta\ en\ el\ parking.\n
comment4.params=
comment4.target=double\ getCoste()
comment4.text=\ Devuelve\ el\ coste.\n\ @return\ double,\ coste\ del\ parking\ (euros/minuto).\n
comment5.params=cost
comment5.target=void\ setCoste(double)
comment5.text=\ Actualiza\ el\ coste.\n\ @param\ c\ double\ nuevo\ coste\ (euros/minuto)\ del\ parking,\ c\ >\ 0.\n
comment6.params=
comment6.target=boolean\ estaLleno()
comment6.text=\ Verifica\ si\ el\ parking\ esta\ lleno\n\ @return\ boolean\ true\ si\ lleno,\ false\ si\ no\n
comment7.params=m\ h\ p
comment7.target=Plaza\ entrarCoche(java.lang.String,\ Hora,\ int)
comment7.text=\ Entra\ un\ coche\ dados\ su\ matricula,\ su\ hora\ de\ entrada\ \n\ y\ un\ numero\ de\ planta\ de\ preferencia,\ \n\ y\ devuelve\ la\ plaza\ donde\ el\ coche\ entra,\ \n\ o\ null\ en\ otro\ caso.\ Precondicion\:\ coche\ no\ presente.\n\ Si\ la\ planta\ de\ preferencia\ no\ esta\ disponible,\ \n\ busca\ plazas\ libres\ en\ las\ plantas\ mas\ cercanas.\n\ @param\ m\ String\ matricula\ del\ coche\ a\ entrar.\n\ @param\ h\ Hora\ hora\ de\ entrada\ del\ coche.\n\ @param\ p\ int\ planta\ de\ preferencia.\n\ @return\ Plaza\ si\ el\ coche\ entra,\ o\ null\ en\ caso\ contrario.\n
comment8.params=m
comment8.target=Plaza\ buscarCoche(java.lang.String)
comment8.text=\ Comprueba\ si\ un\ coche\ de\ matricula\ dada\ esta\ en\ el\ parking.\ \n\ @param\ m\ String\ matricula\ del\ coche\ a\ buscar.\n\ @return\ Plaza,\ plaza\ ocupada\ por\ el\ coche,\ si\ se\ encuentra,\ \n\ o\ null\ si\ no\ se\ encuentra.\n
comment9.params=m\ h
comment9.target=double\ salirCoche(java.lang.String,\ Hora)
comment9.text=\ Saca\ el\ coche\ del\ parking\ y\ devuelve\ su\ coste.\n\ @param\ m\ String\ matricula\ del\ coche\ a\ salir.\ Precondicion\:\ siempre\ esta.\n\ @param\ h\ Hora\ hora\ de\ salida\ del\ coche.\ \n\ \ \ Precondicion\:\ posterior\ a\ la\ hora\ de\ entrada.\n\ @return\ double,\ coste\ en\ euros\ a\ pagar.\n
numComments=12
